---
format: 
  revealjs:
    slide-number: false
    height: 900
    width: 1600
    logo: images/cp_hex_logo.png
    theme: night
    embed-resources: true
    auto-stretch: false
editor: source
bibliography: references.bib
---


##  {background-image="images/code-backdrop.jpg" background-position="cover"}

::: {style="font-size: 3.5em; color: #FFFFFF;"}
**Coding Code: Investigating Student’s Data Science Skills with Qualitative Methods**
:::

##

::: {style="font-size: 3em; color: #FFFFFF;"}
Today's layout
:::

</br>

<!-- todo: outline -->

<center><link to slides></center>

##  {background-color="#B6CADA"}

::: {style="font-size: 5em; color: #000000;"}
Investigating student learning through code
:::

::: columns
::: {.column width="60%"}
:::

::: {.column width="5%"}
:::

::: {.column width="25%"}
```{r}
knitr::include_graphics("images/code-design.png")
```
:::
:::

## 

::: {style="font-size: 2.75em; color: #FFFFFF;"}
What research has been done?
:::

A great deal of research has focused on what to teach in data science courses, but little focus on how students learn data science concepts.

. . .

</br>

Thus far we have detailed...

::: columns
::: {.column width="45%"}
-  concepts or competencies that ought to be included in data science programs

- perspectives on when to teach data science

- how to teach data science concepts
:::

::: {.column width="10%"}
:::

::: {.column width="45%"}
::: fragment
- methods for integrating data science into the classroom

- assorted topics to be considered in data science courses
:::
:::
:::

::: notes
While these reports are useful, it is important to understand how these
recommendations translate into student learning. Teaching data science
effectively is more than identifying end goals and developing a novel curriculum. Effective teaching demands an understanding of the perspective of the learner and how they make sense of information and write computing code in the process of learning. 

The discipline of data science education shares a great deal of similarities with that of CS education; namely, the important role students’ code plays in their learning. Thus, the discipline of data science education stands to learn from how CS education researchers investigate the student learning in the context of the code they produce. 
:::

##

::: {style="font-size: 3em; color: #FFFFFF;"}
Drawing on research in Computer Science Education
:::


::: columns
::: {.column width="45%"}
::: {.fragment .fade-in-then-out}
```{r}
#| out-width: 65%
knitr::include_graphics("images/bluej-icon.png")
```
:::
:::

::: {.column width="10%"}
:::

::: {.column width="45%"}
::: fragment
```{r}
#| out-width: 50%
knitr::include_graphics("images/code-review.png")
```
:::
:::
:::

## 

::: {style="font-size: 2em; color: #FFFFFF;"}
The Importance of Students’ Attention to Program State [@lewis2012]
:::

</br>

::: columns
::: {.column width="60%"}

- Attends to **both** the code produced by a student and their learning process 

- Pairs a student's code with their debugging behavior side-by-side
:::

::: {.column width="5%"}
:::

::: {.column width="25%"}
![](images/debug.png){.r-stretch}
:::
:::

. . .

</br>

> These analyses of students’ code should not be few and far between. Students’ code poses a unique avenue for qualitative research in the teaching and learning of computing. 

::: notes
Paints a clear picture of both the bug in the student's code and the direction of their attention
:::

## 

::: {style="font-size: 2em; color: #FFFFFF;"}
A framework for analyzing student's code [@schulte2008]
:::

::: {style="font-size: 0.75em;"}
|                    | Text Surface                                                              | Program Execution                                                      | Function                                                                                   |
|:------------------|------------------|------------------|------------------|
| **Macrostructure** | Understanding the overall structure of the program                        | Understanding the "algorithm" of the program                           | Understanding the goal / purpose of the program (in its context)                           |
| **Relations**      | References between blocks, e.g., method calls, object creation            | Sequence of method calls, object sequence diagrams                     | Understanding how sub-goals are related to goals, how function is achieved by subfunctions |
| **Blocks**         | Regions of interest (ROI) that syntactically or semantically build a unit | Operation of a block, a method, or a ROI (as a sequence of statements) | Function of a block, may be seen as a sub-goal                                             |
| **Atoms**          | Language elements                                                         | Operation of a statement                                               | Function of a statement, only understandable in context                                    |
:::

## 

::: {style="font-size: 2em; color: #FFFFFF;"}
How could this look?
:::

</br>

::: {.fragment .fade-in-then-semi-out}
[Atoms]{style="color: #ed8402; font-size: 1.5em"}

```         
with(ProximateAnalysisData, plot(PSUA~Lipid, las=1))
```

<!-- - How is whitespace used? -->

<!-- - What operation(s) does this statement carry out? -->

<!-- - How is this statement related to the broader context of the program? -->
:::

</br>

::: fragment
[Block]{style="color: #34605f; font-size: 1.5em"}

```         
anterior <- lm(ProximateAnalysisData$PSUA~ProximateAnalysisData$Lipid)  
summary(anterior)  
with(ProximateAnalysisData, plot(PSUA~Lipid, las=1))  
abline(anterior)  
plot(anterior)
```
:::

## 

[Relationships Between Blocks]{style="color: #D4D4D4; font-size: 1.5em"}

</br>

```         
anterior <- lm(ProximateAnalysisData$PSUA~ProximateAnalysisData$Lipid)  
summary(anterior)  
with(ProximateAnalysisData, plot(PSUA~Lipid, las=1))  
abline(anterior)  
plot(anterior)
```

</br>

```         
posterior2 <- lm(ProximateAnalysisDataOutlier$PSUP ~ ProximateAnalysisDataOutlier$Lipid)
summary(posterior2)
with(ProximateAnalysisDataOutlier, plot(PSUP~Lipid, las=1, xlab = "Whole-body Lipid Content (%)", ylab = "UP Fatmeter Reading"))
abline(posterior2)
plot(posterior2)
posterior2
```

##  {background-color="#B6CADA"}

::: {style="font-size: 3em; color: #000000;"}
How can this be used for learning trajectory research?
:::

## 

<!-- atom level analysis -->

## 

<!-- block level analysis -->

## 

::: {style="font-size: 2.5em; color: #FFFFFF;"}
Descriptive coding
:::

</br>

::: {style="font-size: 1.25em;"}
```{r}
#| eval: false
#| echo: true
#| code-line-numbers: false
RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 1]
```
:::

. . .

</br>

. . .

> "Filters a vector of values using extraction operator, based on an equality relation with a variable selected from dataframe using `$` operator"

## 

::: {style="font-size: 2em; color: #FFFFFF;"}
Uncovering emergent themes
:::

::: {style="font-size: 0.75em;"}
```{r}
#| eval: false
#| echo: true
#| code-line-numbers: false

linearAnterior <- lm(PADataNoOutlier$Lipid ~ PADataNoOutlier$PSUA)

early <- subset(RPMA2Growth, StockYear < 2006)	

Weight5 <- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 5], na.rm = TRUE)

gas <- gas[!(substr(gas$sampleID,3,3) %in% c("b","c")), ]	

obsD <- subset(gas, gas$carboy == "D")$N15_N2_Ar

lowerCIBound <- pMat[1:mlleIndex,1][which.min(abs(mlleCI+likelihoods[1:mlleIndex]))]
```
:::

<!-- </br> -->

::: columns
::: {.column width="50%"}
**Data wrangling**

::: {style="font-size: 0.65em;"}
> Statements of code whose purpose is to prepare a dataset for analysis and / or visualization
:::
:::

::: {.column width="5%"}
:::

::: {.column width="45%"}
::: {style="font-size: 0.75em;"}
**Sub-themes**

-   selecting variables
-   filtering observations
-   mutating variables
:::
:::
:::

## 

::: {style="font-size: 2em; color: #FFFFFF;"}
An alternative direction
:::

</br>

::: columns
::: {.column width="20%"}
::: {style="font-size: 1.5em; color: #FFFFFF;"}
Process coding:
:::
:::

::: {.column width="5%"}
:::

::: {.column width="75%"}
::: {style="font-size: 0.75em; color: #FFFFFF;"}
> uses gerunds ("-ing" words) to connote action in the data [@saldana]
:::
:::
:::

. . .

</br>

::: {style="font-size: 0.75em;"}
-   Particularly relevant to describing the processes of human actions
    -   can be "strategic, routine, random, novel, automatic, and / or thoughtful" [@corbin, p. 247].
-   Can be intertwined with time, such that actions can emerge, change, or occur in particular sequences.
:::

## 

::: {style="font-size: 2em; color: #FFFFFF;"}
Practical considerations
:::

::: columns
::: {.column width="45%"}
**How much code should I collect?**

::: {style="font-size: 0.75em;"}
::: incremental
-   Driven by the research question!
    -   Amount of each student's code
    -   Number of students
:::
:::
:::

::: {.column width="5%"}
:::

::: {.column width="45%"}
**How do readers trust my analysis?**

::: {style="font-size: 0.75em;"}
::: incremental
-   Trust comes from:

    -   confirmability
    -   reliability
    -   credibility
    -   transferability
:::
:::
:::
:::

. . .

</br> Excellent resources: Creswell & Poth [-@creswell]; Merriam & Tisdell [-@merriam-tisdell]; Miles et al. [-@miles]

<!-- researcher bias -->

<!-- stable across researchers -->

<!-- findings paint authentic portrait of data -->

<!-- conclusions can be transferred to other contexts  -->

## 

::: {style="font-size: 2em; color: #FFFFFF;"}
Why is this important for data science education?
:::

Theobold et al. [-@theobold-jsdse]

. . .

</br>

::: {style="font-size: 1.5em; color: #e28743;"}
How can we distinguish merely interesting learning from effective learning [@wiggins]?
:::

## 

::: {style="font-size: 3em; color: #FFFFFF;"}
Questions?
:::

::: columns
::: {.column width="55%"}
:::

::: {.column width="5%"}
:::

::: {.column width="40%"}
![](images/questions.png)
:::
:::

## References
